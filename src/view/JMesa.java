/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.AtorJogador;
import model.Baralho;
import model.Carta;
import model.Jogador;
import model.Mesa;

/**
 *
 * @author rodolfolottin
 */
public class JMesa extends javax.swing.JFrame {

    AtorJogador atorJogador;
    protected static final int START = 1;
    protected static final int CONECTADO = 2;
    
    public JMesa() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.atualizarVisibilidadeTela(START);
        atorJogador = new AtorJogador(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMesa = new javax.swing.JPanel();
        jLabelBaralhoCompartilhado = new javax.swing.JLabel();
        jLabelLixoCompartilhado = new javax.swing.JLabel();
        jLabelAdversarioCompartilhado = new javax.swing.JLabel();
        jLabelJogadorCompartilhado = new javax.swing.JLabel();
        jPanelJogadorAdversario = new javax.swing.JPanel();
        jPanelJogadorAtual = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemConectar = new javax.swing.JMenuItem();
        jMenuItemIniciarPartida = new javax.swing.JMenuItem();
        jMenuItemDesconectar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(143, 0, 144));

        jPanelMesa.setBackground(new java.awt.Color(143, 0, 144));
        jPanelMesa.setForeground(new java.awt.Color(251, 239, 253));
        jPanelMesa.setToolTipText("");
        jPanelMesa.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabelBaralhoCompartilhado.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                clicouBaralho(atorJogador.getMesa().getBaralho(), getJogadorAtualNaMesa(atorJogador.getMesa()));
            }
        });

        jPanelJogadorAdversario.setBackground(new java.awt.Color(143, 0, 144));
        jPanelJogadorAdversario.setLayout(new java.awt.GridBagLayout());

        jPanelJogadorAtual.setBackground(new java.awt.Color(143, 0, 144));
        jPanelJogadorAtual.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanelMesaLayout = new javax.swing.GroupLayout(jPanelMesa);
        jPanelMesa.setLayout(jPanelMesaLayout);
        jPanelMesaLayout.setHorizontalGroup(
            jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMesaLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelJogadorAdversario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMesaLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanelJogadorAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelMesaLayout.createSequentialGroup()
                                .addComponent(jLabelBaralhoCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelLixoCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMesaLayout.createSequentialGroup()
                .addContainerGap(395, Short.MAX_VALUE)
                .addGroup(jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelJogadorCompartilhado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAdversarioCompartilhado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(389, 389, 389))
        );
        jPanelMesaLayout.setVerticalGroup(
            jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMesaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelJogadorAdversario, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMesaLayout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(jLabelLixoCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelMesaLayout.createSequentialGroup()
                            .addGap(101, 101, 101)
                            .addComponent(jLabelBaralhoCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelMesaLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabelAdversarioCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jLabelJogadorCompartilhado, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelJogadorAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        jMenu1.setText("Menu");

        jMenuItemConectar.setText("Conectar");
        jMenuItemConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConectarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemConectar);

        jMenuItemIniciarPartida.setText("Iniciar partida");
        jMenuItemIniciarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemIniciarPartidaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemIniciarPartida);

        jMenuItemDesconectar.setText("Desconectar");
        jMenuItemDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDesconectarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDesconectar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMesa, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConectarActionPerformed
        this.conectar();
    }//GEN-LAST:event_jMenuItemConectarActionPerformed

     public String getNomeJogador() {
        return JOptionPane.showInputDialog(this, "Digite seu nome: ", "jogador");
    }

    public String getNomeServidor() {
        return JOptionPane.showInputDialog(this, "Digite o servidor: ", "localhost");
    }

    public void conectar() {
        String nomeAtual =  this.getNomeJogador();
        String servidor = this.getNomeServidor();

        boolean conectou = atorJogador.conectar(nomeAtual, servidor);
        atorJogador.setJogadorAtual(new Jogador(nomeAtual));

        if (conectou) {
            this.adicionarTitulo(nomeAtual);
            this.atualizarVisibilidadeTela(CONECTADO);
            this.exibeMensagem("Conectado com sucesso!");
        } else {
            this.exibeMensagem("Não foi possível se conectar!");
        }
    }

    private void adicionarTitulo(String nome) {
        this.setTitle(nome);
    }
    
    public void exibeMensagem(String mensagem) {
        JOptionPane.showMessageDialog(this, mensagem);
    }
    
    public void atualizarVisibilidadeTela(int mode) {
        
        if (mode == START) {
            jMenuItemConectar.setEnabled(true);
            jMenuItemDesconectar.setEnabled(false);
            jMenuItemIniciarPartida.setEnabled(false);
        } else if (mode == CONECTADO) {
            jMenuItemDesconectar.setEnabled(true);
            jMenuItemIniciarPartida.setEnabled(true);
            jMenuItemConectar.setEnabled(false);
        }
    }
    
    public void recebeMesa(Mesa mesa) {
        if (mesa.getStatus().equals(Mesa.StatusMesa.INICAR_PARTIDA)) {
            this.iniciarPartida(mesa);
            JOptionPane.showMessageDialog(this, "Uma nova partida vai iniciar");
        } else if (mesa.getStatus().equals(Mesa.StatusMesa.INICIAR_RODADA)) {
            this.iniciarRodada(mesa);
        } 
        this.validate();
    }
    
    private void iniciarPartida(Mesa mesa) {
        this.atualizaCamposInicioPartida(mesa);
    }
    
    private void iniciarRodada(Mesa mesa) {
        //por enquanto
        mesa.iniciarRodada(mesa.getJogadorDaVez());
    }
    
    private void atualizaCamposInicioPartida(Mesa mesa) {
        limparPanelsCartas();
        
        Jogador jogadorAtual = this.getJogadorAtualNaMesa(mesa);
        
        //this.atualizaCartasJogadorAtual(jogadorAtual);
        this.atualizaCartasAdversarios(jogadorAtual);
        this.atualizaBaralho(mesa);
        this.atualizaCartaLixo(mesa);
        iniciarRodada(mesa);
    }
    
    public void limpaTodosCampos() {
        this.limparPanelsCartas();
    }
    
    private void limparPanelsCartas() {
        jPanelJogadorAtual.removeAll();
        jPanelJogadorAdversario.removeAll();
        jLabelBaralhoCompartilhado.setIcon(null);
        jLabelLixoCompartilhado.setIcon(null);
        jLabelJogadorCompartilhado.setIcon(null);
        jLabelAdversarioCompartilhado.setIcon(null);
    }
    
    private Jogador getJogadorAtualNaMesa(Mesa mesa) {
        Jogador jogador1 = mesa.getJogador1();
        Jogador jogador2 = mesa.getJogador2();
        
        if (this.atorJogador.getJogadorAtual().getNome().equals(jogador1.getNome())){
            return jogador1;
        } else {
            return jogador2;
        }
    }
    
    private void atualizaCartasJogadorAtual(Jogador joga) {
        System.out.println("entrou para atualizar");
        for (int i = 0; i < joga.getCartas().size(); i++) {
            JLabel jlabel = new JLabel(joga.getCartas().get(i).getImage());
            jlabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            //jlabel.addMouseListener(new Click(joga.getCartas().get(i)));
            jPanelJogadorAtual.add(jlabel);
        }     
    }
    
    private void atualizaCartasAdversarios(Jogador jogadorAtual) {
        adicionaCartas(jPanelJogadorAdversario, true);
    }

    private void atualizaBaralho(Mesa mesa) {
        if (mesa.verificarBaralho(mesa.getBaralho())) {
            ImageIcon image = new javax.swing.ImageIcon(getClass().getResource("/images/fundo.jpg"));
            //ARRUMAR
            image.setImage(image.getImage().getScaledInstance(70, 100, 150));
            //adicionar componente?
            jLabelBaralhoCompartilhado.setIcon(image);
        } else {
            jLabelBaralhoCompartilhado.removeAll();
        }
    }
    
    private void clicouBaralho(Baralho baralho, Jogador joga){
        if (atorJogador.efetuarCompra(baralho)) {
            this.atualizaCartasJogadorAtual(joga);
        }
    }
    
    private void atualizaCartaLixo(Mesa mesa) {
        mesa.criarCartaLixo();
        Carta cartaLixo = mesa.getCartaLixo();
        ImageIcon image = cartaLixo.getImage();
        //ARRUMAR
        image.setImage(image.getImage().getScaledInstance(70, 100, 150));
        jLabelLixoCompartilhado.setIcon(image);
    }
    
    private void adicionaCartas(JPanel pn, boolean adversario) {
        ImageIcon image = null;

        if (adversario) {
            image = new javax.swing.ImageIcon(getClass().getResource("/images/fundo.jpg"));
            //posso deixar essa mudança de tamanho?
            //vou deixar por enquanto, depois redimensiono as imagens
            image.setImage(image.getImage().getScaledInstance(70, 100, 150));
        } else {
            image = new javax.swing.ImageIcon(getClass().getResource("/images/fundo.jpg"));
            image.setImage(image.getImage().getScaledInstance(70, 100, 150));
        }
        JLabel label = new JLabel(image);
        pn.add(label);
    }
    
    private void jMenuItemIniciarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemIniciarPartidaActionPerformed
        atorJogador.iniciarPartida();
    }//GEN-LAST:event_jMenuItemIniciarPartidaActionPerformed

    private void jMenuItemDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDesconectarActionPerformed
        atorJogador.desconectar();
    }//GEN-LAST:event_jMenuItemDesconectarActionPerformed
      
    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
  
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JMesa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelAdversarioCompartilhado;
    private javax.swing.JLabel jLabelBaralhoCompartilhado;
    private javax.swing.JLabel jLabelJogadorCompartilhado;
    private javax.swing.JLabel jLabelLixoCompartilhado;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemConectar;
    private javax.swing.JMenuItem jMenuItemDesconectar;
    private javax.swing.JMenuItem jMenuItemIniciarPartida;
    private javax.swing.JPanel jPanelJogadorAdversario;
    private javax.swing.JPanel jPanelJogadorAtual;
    private javax.swing.JPanel jPanelMesa;
    // End of variables declaration//GEN-END:variables
}
